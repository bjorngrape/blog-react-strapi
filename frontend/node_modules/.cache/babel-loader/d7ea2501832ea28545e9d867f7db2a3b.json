{"ast":null,"code":"var _jsxFileName = \"/Users/Bjorn/Documents/Webbutveckling/React/blog-strapi/frontend/src/components/Query/index.js\";\n// REUSABLE QUERY COMPONENT\n\n/* Apollo will fetch data from different pages i.e. no need to rewrite the same code every time in different pages. */\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\"; // using the useQuery hook to call my Strapi server at this address http://localhost:1337/graphql\n\nconst Query = ({\n  children,\n  query,\n  id\n}) => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(query, {\n    variables: {\n      id: id\n    } // sending an id if it exists (necessary when you'll want to fetch just one article)\n\n  });\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }\n  }, \"Error: \", JSON.stringify(error));\n  return children({\n    data\n  }); // If the request is successful, it will return the child component with the retrieved data as prop\n};\n\nexport default Query;","map":{"version":3,"sources":["/Users/Bjorn/Documents/Webbutveckling/React/blog-strapi/frontend/src/components/Query/index.js"],"names":["React","useQuery","Query","children","query","id","data","loading","error","variables","JSON","stringify"],"mappings":";AAAA;;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB,C,CAAgD;;AAEhD,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA;AAAnB,CAAD,KAA6B;AACzC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BP,QAAQ,CAACG,KAAD,EAAQ;AAC/CK,IAAAA,SAAS,EAAE;AAAEJ,MAAAA,EAAE,EAAEA;AAAN,KADoC,CACzB;;AADyB,GAAR,CAAzC;AAIA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWE,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAX,CAAP;AACX,SAAOL,QAAQ,CAAC;AAAEG,IAAAA;AAAF,GAAD,CAAf,CAPyC,CAOd;AAC5B,CARD;;AAUA,eAAeJ,KAAf","sourcesContent":["// REUSABLE QUERY COMPONENT\n\n/* Apollo will fetch data from different pages i.e. no need to rewrite the same code every time in different pages. */\n\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\"; // using the useQuery hook to call my Strapi server at this address http://localhost:1337/graphql\n\nconst Query = ({ children, query, id }) => {\n  const { data, loading, error } = useQuery(query, {\n    variables: { id: id } // sending an id if it exists (necessary when you'll want to fetch just one article)\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {JSON.stringify(error)}</p>;\n  return children({ data }); // If the request is successful, it will return the child component with the retrieved data as prop\n};\n\nexport default Query;"]},"metadata":{},"sourceType":"module"}